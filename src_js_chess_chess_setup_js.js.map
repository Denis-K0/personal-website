{"version":3,"file":"src_js_chess_chess_setup_js.js","mappings":";;;;;;;;;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAO,CAAC,wFAAyC;AAC5E,4BAA4B,mBAAO,CAAC,0FAA0C;AAC9E,4BAA4B,mBAAO,CAAC,0FAA0C;AAC9E,2BAA2B,mBAAO,CAAC,wFAAyC;AAC5E,0BAA0B,mBAAO,CAAC,sFAAwC;AAC1E,0BAA0B,mBAAO,CAAC,sFAAwC;AAC1E,2BAA2B,mBAAO,CAAC,wFAAyC;AAC5E,4BAA4B,mBAAO,CAAC,0FAA0C;AAC9E,4BAA4B,mBAAO,CAAC,0FAA0C;AAC9E,2BAA2B,mBAAO,CAAC,wFAAyC;AAC5E,0BAA0B,mBAAO,CAAC,sFAAwC;AAC1E,0BAA0B,mBAAO,CAAC,sFAAwC;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,0EAA0E;AACxF,cAAc,4EAA4E;AAC1F,cAAc,4EAA4E;AAC1F,cAAc,0EAA0E;AACxF,cAAc,wEAAwE;AACtF,cAAc,4EAA4E;AAC1F,cAAc,4EAA4E;AAC1F,cAAc,0EAA0E;AACxF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,wEAAwE;AACtF,cAAc,0EAA0E;AACxF,cAAc,4EAA4E;AAC1F,cAAc,4EAA4E;AAC1F,cAAc,0EAA0E;AACxF,cAAc,wEAAwE;AACtF,cAAc,4EAA4E;AAC1F,cAAc,4EAA4E;AAC1F,cAAc,0EAA0E;AACxF;;AAEA;AACA,wBAAwB,SAAS;AACjC,4DAA4D,8BAA8B;AAC1F;AACA;AACA,0DAA0D,8BAA8B;AACxF,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,QAAQ,kLAA6B;AACrC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,KAAK;AACL;;;;;;;;;;;;;;;;;ACvHgC;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAO,CAAC,gDAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sEAAsE,yCAAK;AAC3E,mEAAmE,yCAAK;AACxE;AACA;AACA;AACA;;AAEA,kEAAkE,yCAAK;AACvE,KAAK;AACL;AACA,QAAQ,yCAAK;;AAEb;AACA,YAAY,yCAAK;AACjB,UAAU;AACV,YAAY,yCAAK;AACjB;AACA;AACA","sources":["webpack://portfolio-page/./src/js/chess/board.js","webpack://portfolio-page/./src/js/chess/chess_setup.js"],"sourcesContent":["\"use strict\";\n\nconst Board = {\n    player01: null,\n    player02: null,\n    createBoard() {\n        // SVG import\n        const towerBlack = require('../../assets/chessPieces/towerBlack.svg');\n        const knightBlack = require('../../assets/chessPieces/knightBlack.svg');\n        const bishopBlack = require('../../assets/chessPieces/bishopBlack.svg');\n        const queenBlack = require('../../assets/chessPieces/queenBlack.svg');\n        const kingBlack = require('../../assets/chessPieces/kingBlack.svg');\n        const pawnBlack = require('../../assets/chessPieces/pawnBlack.svg');\n        const towerWhite = require('../../assets/chessPieces/towerWhite.svg');\n        const knightWhite = require('../../assets/chessPieces/knightWhite.svg');\n        const bishopWhite = require('../../assets/chessPieces/bishopWhite.svg');\n        const queenWhite = require('../../assets/chessPieces/queenWhite.svg');\n        const kingWhite = require('../../assets/chessPieces/kingWhite.svg');\n        const pawnWhite = require('../../assets/chessPieces/pawnWhite.svg');\n\n        // Clean the container for the board\n        const chessSetup = document.getElementById('chessSetup');\n        chessSetup.innerHTML = '';\n\n        // Create the pop-up\n        const popUp = document.createElement('div');\n        popUp.className = 'chessPopUp';\n        popUp.id = 'chessPopUp';\n\n        // Create the board border\n        const boardInnerBorder = document.createElement('div');\n        boardInnerBorder.className = 'boardInnerBorder';\n        boardInnerBorder.id = 'boardInnerBorder';\n        \n        // Create the main board\n        const mainBoard = document.createElement('div');\n        mainBoard.className = 'mainBoard';\n        mainBoard.id = 'board';\n\n        // Function for create a field on the board, necessary for loop.\n        function createField(id, color, imgSrc, imgId) {\n            const fieldCluster = document.createElement('div');\n            fieldCluster.className = `fieldCluster ${color}`;\n            fieldCluster.id = id;\n\n            if (imgSrc) {\n                const img = document.createElement('img');\n                img.src = imgSrc;\n                img.id = imgId;\n                fieldCluster.appendChild(img);\n            };\n\n            return fieldCluster;\n        };\n\n        // Necessary for the individual field creation\n        const fields = [\n            { id: 'field01', color: 'white', imgSrc: towerBlack, imgId: 'tower01Black' },\n            { id: 'field02', color: 'black', imgSrc: knightBlack, imgId: 'knight01Black' },\n            { id: 'field03', color: 'white', imgSrc: bishopBlack, imgId: 'bishop01Black' },\n            { id: 'field04', color: 'black', imgSrc: queenBlack, imgId: 'queen01Black' },\n            { id: 'field05', color: 'white', imgSrc: kingBlack, imgId: 'king01Black' },\n            { id: 'field06', color: 'black', imgSrc: bishopBlack, imgId: 'bishop02Black' },\n            { id: 'field07', color: 'white', imgSrc: knightBlack, imgId: 'knight02Black' },\n            { id: 'field08', color: 'black', imgSrc: towerBlack, imgId: 'tower02Black' },\n            { id: 'field09', color: 'black', imgSrc: pawnBlack, imgId: 'pawn01Black' },\n            { id: 'field10', color: 'white', imgSrc: pawnBlack, imgId: 'pawn02Black' },\n            { id: 'field11', color: 'black', imgSrc: pawnBlack, imgId: 'pawn03Black' },\n            { id: 'field12', color: 'white', imgSrc: pawnBlack, imgId: 'pawn04Black' },\n            { id: 'field13', color: 'black', imgSrc: pawnBlack, imgId: 'pawn05Black' },\n            { id: 'field14', color: 'white', imgSrc: pawnBlack, imgId: 'pawn06Black' },\n            { id: 'field15', color: 'black', imgSrc: pawnBlack, imgId: 'pawn07Black' },\n            { id: 'field16', color: 'white', imgSrc: pawnBlack, imgId: 'pawn08Black' },\n            { id: 'field49', color: 'white', imgSrc: pawnWhite, imgId: 'pawn01White' },\n            { id: 'field50', color: 'black', imgSrc: pawnWhite, imgId: 'pawn02White' },\n            { id: 'field51', color: 'white', imgSrc: pawnWhite, imgId: 'pawn03White' },\n            { id: 'field52', color: 'black', imgSrc: pawnWhite, imgId: 'pawn04White' },\n            { id: 'field53', color: 'white', imgSrc: pawnWhite, imgId: 'pawn05White' },\n            { id: 'field54', color: 'black', imgSrc: pawnWhite, imgId: 'pawn06White' },\n            { id: 'field55', color: 'white', imgSrc: pawnWhite, imgId: 'pawn07White' },\n            { id: 'field56', color: 'black', imgSrc: pawnWhite, imgId: 'pawn08White' },\n            { id: 'field57', color: 'black', imgSrc: towerWhite, imgId: 'tower01White' },\n            { id: 'field58', color: 'white', imgSrc: knightWhite, imgId: 'knight01White' },\n            { id: 'field59', color: 'black', imgSrc: bishopWhite, imgId: 'bishop01White' },\n            { id: 'field60', color: 'white', imgSrc: queenWhite, imgId: 'queen01White' },\n            { id: 'field61', color: 'black', imgSrc: kingWhite, imgId: 'king01White' },\n            { id: 'field62', color: 'white', imgSrc: bishopWhite, imgId: 'bishop02White' },\n            { id: 'field63', color: 'black', imgSrc: knightWhite, imgId: 'knight02White' },\n            { id: 'field64', color: 'white', imgSrc: towerWhite, imgId: 'tower02White' },\n        ];\n\n        // Loop for the creations of the fields\n        for (let i = 1; i <= 64; i++) {\n            const field = fields.find(f => f.id === `field${i.toString().padStart(2, '0')}`);\n            const color = ((i + Math.floor((i - 1) / 8)) % 2 !== 0) ? 'white' : 'black';\n            if (!field) {\n                mainBoard.appendChild(createField(`field${i.toString().padStart(2, '0')}`, color));\n            } else {\n                mainBoard.appendChild(createField(field.id, color, field.imgSrc, field.imgId));\n            }\n        }\n\n        boardInnerBorder.appendChild(mainBoard);\n        chessSetup.appendChild(popUp);\n        chessSetup.appendChild(boardInnerBorder);\n\n        Board.startChess();\n    },\n    startChess() {\n        import('../chess/gameStatus')\n            .then(module => {\n                module.coreData.White.player01 = Board.player01;\n                module.coreData.Black.player02 = Board.player02;\n                module.gameStatus.resetGame();\n            })\n            .catch(err => {\n                console.error('Fehler beim Laden des Moduls:', err);\n            });\n    },\n};\n\nexport { Board };","import { Board } from './board';\n\n\"use strict\";\n\nconst ChessSetup = {\n    projectDialog: document.getElementById('projectDialog'),\n    player01Input: null,\n    player02Input: null,\n    playerInputs: [],\n    startChessGameBtn: null,\n    botBtn: null,\n    createChessSetup() {\n        // The container for the whole setup\n        const chessSetup = document.createElement('div');\n        chessSetup.className = 'chessSetup';\n        chessSetup.id = 'chessSetup';\n    \n        // The headline container - First part\n        const headlineContainer = document.createElement('div');\n        headlineContainer.className = 'headlineContainer';\n    \n        // The headline in 2 parts\n        const chessHeadline = document.createElement('h5');\n        chessHeadline.className = 'chessHeadline';\n        chessHeadline.textContent = 'Chess';\n    \n        const chessHeadlineSubtext = document.createElement('h5');\n        chessHeadlineSubtext.className = 'chessHeadlineSubtext';\n        chessHeadlineSubtext.textContent = 'The Game';\n    \n        headlineContainer.appendChild(chessHeadline);\n        headlineContainer.appendChild(chessHeadlineSubtext);\n    \n        // The selection container - Second part\n        const selectionContainer = document.createElement('div');\n        selectionContainer.className = 'selectionContainer';\n        \n        // The first input\n        const player01Input = document.createElement('input');\n        player01Input.type = 'text';\n        player01Input.value = 'Player';\n        player01Input.className = 'player01Input';\n        player01Input.id = 'player01Input';\n    \n        // The \"vs\" img\n        const vsImg = document.createElement('img');\n        vsImg.src = require('../../assets/vs.svg');\n        vsImg.alt = '';\n        vsImg.className = 'vsImg';\n    \n        // The second input\n        const player02Input = document.createElement('input');\n        player02Input.type = 'text';\n        player02Input.value = 'Player';\n        player02Input.className = 'player02Input';\n        player02Input.id = 'player02Input';\n        \n        // The \"or\" paragraph\n        const chessOrParagraph = document.createElement('p');\n        chessOrParagraph.className = 'chessOrParagraph';\n        chessOrParagraph.textContent = 'or';\n        \n        // The bot button\n        const botBtn = document.createElement('button');\n        botBtn.className = 'botBtn';\n        botBtn.textContent = 'AI-BOT';\n        botBtn.id = 'botBtn';\n        \n        selectionContainer.appendChild(player01Input);\n        selectionContainer.appendChild(vsImg);\n        selectionContainer.appendChild(player02Input);\n        selectionContainer.appendChild(chessOrParagraph);\n        selectionContainer.appendChild(botBtn);\n    \n        // The starting button - Third part\n        const startChessGameBtn = document.createElement('button');\n        startChessGameBtn.className = 'startChessGame';\n        startChessGameBtn.id = 'startChessGameBtn';\n        startChessGameBtn.textContent = 'Start Game';\n        \n        // Append all 3 parts\n        chessSetup.appendChild(headlineContainer);\n        chessSetup.appendChild(selectionContainer);\n        chessSetup.appendChild(startChessGameBtn);\n    \n        // Append to the dialog\n        this.projectDialog.appendChild(chessSetup);\n        this.setSelectors();\n        this.addSetupEvents();\n    },\n    setSelectors() {\n        this.player01Input = document.getElementById('player01Input');\n        this.player02Input = document.getElementById('player02Input');\n        this.playerInputs = [this.player01Input, this.player02Input];\n        this.startChessGameBtn = document.getElementById('startChessGameBtn');\n        this.botBtn = document.getElementById('botBtn');\n\n    },\n    addSetupEvents() {\n        this.playerInputs.forEach((playerInput) => {\n            playerInput.addEventListener('focus', this.clearInputByFocus);\n            playerInput.addEventListener('keydown', this.exitFocusByEnter);\n            playerInput.addEventListener('blur', this.manageInputBehavior);\n        });\n\n        this.botBtn.addEventListener('click', this.manageBotBtnBehavior);\n    },\n    clearInputByFocus(event) {\n        const playerInput = event.currentTarget;\n        playerInput.value = '';\n    },\n    exitFocusByEnter(event) {\n        const playerInput= event.currentTarget;\n\n        if(event.key === 'Enter') {\n            playerInput.blur();\n        }\n    },\n    manageInputBehavior(event) {\n        const playerInput= event.currentTarget;\n\n        // If no input added, than set to default\n        if (playerInput.value === '') {\n            playerInput.value = 'Player';\n            playerInput.classList.remove('selected');\n\n            ChessSetup.checkStartConditions();\n            return;\n        };\n\n        // Deselect ai\n        if(playerInput.id === 'player02Input') {\n            ChessSetup.botBtn.classList.remove('selected');\n\n            ChessSetup.checkStartConditions();\n        };\n\n        // Successful select the input\n        playerInput.classList.add('selected');\n\n        ChessSetup.checkStartConditions();\n    },\n    manageBotBtnBehavior() {\n        ChessSetup.player02Input.classList.remove('selected');\n        ChessSetup.botBtn.classList.add('selected');\n\n        ChessSetup.checkStartConditions();\n    },\n    checkStartConditions() {\n        if(ChessSetup.player01Input.classList.contains('selected') &&\n        (ChessSetup.player02Input.classList.contains('selected') ||\n        ChessSetup.botBtn.classList.contains('selected'))) {\n            ChessSetup.startChessGameBtn.style.maxHeight = 'auto';\n            ChessSetup.startChessGameBtn.style.padding = '8%';\n\n            ChessSetup.changePlayer();\n\n            ChessSetup.startChessGameBtn.removeEventListener('click', Board.createBoard);\n            ChessSetup.startChessGameBtn.addEventListener('click', Board.createBoard);\n            return;\n        };\n        ChessSetup.startChessGameBtn.style.maxHeight = null;\n        ChessSetup.startChessGameBtn.style.padding = null;\n\n        ChessSetup.startChessGameBtn.removeEventListener('click', Board.createBoard);\n    },\n    changePlayer() {\n        Board.player01 = ChessSetup.player01Input.value;\n\n        if (ChessSetup.player02Input.classList.contains('selected')) {\n            Board.player02 = ChessSetup.player02Input.value;\n        } else {\n            Board.player02 = 'AI';\n        }\n    }\n};\n\nexport { ChessSetup };"],"names":[],"sourceRoot":""}